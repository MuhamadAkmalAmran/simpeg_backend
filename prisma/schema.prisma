// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  nama     String  @db.VarChar(100)
  username String  @unique @db.VarChar(100)
  email    String  @unique @db.VarChar(100)
  password String  @db.VarChar(100)
  img_url  String? @db.VarChar(100)

  @@map("users")
}

model Profile {
  id                 String   @id @default(uuid())
  gelar_depan        String   @db.VarChar(100)
  gelar_belakang     String   @db.VarChar(100)
  tempat_lahir       String   @db.VarChar(100)
  tanggal_lahir      DateTime @db.Date
  jenis_kelamin      Gender
  Agama              Religion
  status_kepegawaian String   @db.VarChar(100)
  golongan_darah     Blood
  nomor_telepon      Int
  alamat             String   @db.VarChar(100)
  kelurahan          String   @db.VarChar(100)
  kecamatan          String   @db.VarChar(100)
  kabupaten_kota     String   @db.VarChar(100)
  provinsi           String   @db.VarChar(100)

  @@map("profiles")
}

model Position {
  id         String   @id @default(uuid())
  no_sk      String   @db.VarChar(100)
  tanggal_sk DateTime @db.Date
  tmt        DateTime @db.Date
  gaji_pokok Int
  jenis_sk   String
  file_url   String?  @db.VarChar(100)
  verifikasi Boolean  @default(false)

  @@map("positions")
}

model Education {
  id            String  @id @default(uuid())
  jenjang       String  @db.VarChar(100)
  nama_instansi String  @db.VarChar(100)
  jurusan       String  @db.VarChar(100)
  tahun_lulus   String  @db.VarChar(4)
  ijazah_url    String? @db.VarChar(100)
  verifikasi    Boolean @default(false)

  @@map("educations")
}

model Training {
  id             String  @id @default(uuid())
  nama           String  @db.VarChar(100)
  penyelenggara  String  @db.VarChar(100)
  jpl            Int
  tahun_kegiatan String  @db.VarChar(4)
  file_url       String? @db.VarChar(100)
  verifikasi     Boolean @default(false)

  @@map("trainings")
}

model Title {
  id               String   @id @default(uuid())
  jabatan          String   @db.VarChar(100)
  unit_kerja       String   @db.VarChar(100)
  tmt              DateTime @db.Date
  tanggal_berakhir DateTime @db.Date
  no_sk            String   @db.VarChar(100)
  tanggal_sk       DateTime @db.Date
  file_url         String?  @db.VarChar(100)
  verifikasi       Boolean  @default(false)

  @@map("titles")
}

model Family {
  id            String       @id @default(uuid())
  nik           String       @db.VarChar(16)
  nama          String       @db.VarChar(100)
  tempat        String       @db.VarChar(100)
  tanggal_lahir DateTime     @db.Date
  jenis_kelamin Gender
  agama         Religion
  hubungan_kel  Relationship
  verifikasi    Boolean      @default(false)

  @@map("families")
}

model Achievement {
  id            String  @id @default(uuid())
  nama          String  @db.VarChar(100)
  tingkat       String  @db.VarChar(100)
  tahun         String  @db.VarChar(4)
  penyelenggara String  @db.VarChar(100)
  file_url      String? @db.VarChar(100)
  verifikasi    Boolean @default(false)

  @@map("achievements")
}

model Performance {
  id          String  @id @default(uuid())
  nilai_kerja Int
  predikat    String  @db.VarChar(100)
  file_url    String? @db.VarChar(100)
  verifikasi  Boolean @default(false)

  @@map("performances")
}

model Document {
  id            String  @id @default(uuid())
  jenis_dokumen Dokumen
  no_dokumen    BigInt
  file_url      String? @db.VarChar(100)
  verifikasi    Boolean @default(false)

  @@map("documents")
}

enum Relationship {
  anak  @map("Anak")
  istri @map("Istri")
  suami @map("Suami")
}

enum Gender {
  laki_laki @map("Laki-Laki")
  perempuan @map("Perempuan")
}

enum Religion {
  Islam
  Kristen
  Katolik
  Hindu
  Buddha
  Konghucu
}

enum Blood {
  A
  B
  O
  AB
}

enum Sekolah {
  SD
  SMP
  SMA
  S1
  S2
  S3
  Profesi
  Speasilis
}

enum Dokumen {
  KTP
  NBM
  Paspor
  Kartu_Keluarga   @map("Kartu Keluarga")
  NUPTK
  NPWP
  BPJS
  Asuransi_Lainnya @map("Asuransi Lainnya")
}
